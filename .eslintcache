[{"C:\\Projects\\WinBtc247\\src\\index.js":"1","C:\\Projects\\WinBtc247\\src\\App.js":"2","C:\\Projects\\WinBtc247\\src\\reportWebVitals.js":"3","C:\\Projects\\WinBtc247\\src\\redux\\store.js":"4","C:\\Projects\\WinBtc247\\src\\sound\\Playlist.js":"5","C:\\Projects\\WinBtc247\\src\\components\\Auth\\restore.js":"6","C:\\Projects\\WinBtc247\\src\\components\\Main\\Main.js":"7","C:\\Projects\\WinBtc247\\src\\components\\Auth\\gotodesktop.js":"8","C:\\Projects\\WinBtc247\\src\\components\\Auth\\Auth.js":"9","C:\\Projects\\WinBtc247\\src\\components\\Auth\\Reset.js":"10","C:\\Projects\\WinBtc247\\src\\components\\Auth\\Support.js":"11","C:\\Projects\\WinBtc247\\src\\components\\Header\\Header.js":"12","C:\\Projects\\WinBtc247\\src\\components\\Refill\\Refill.js":"13","C:\\Projects\\WinBtc247\\src\\components\\Refill\\Btc.js":"14","C:\\Projects\\WinBtc247\\src\\components\\Refill\\Usd.js":"15","C:\\Projects\\WinBtc247\\src\\components\\Start\\Start.js":"16","C:\\Projects\\WinBtc247\\src\\components\\Refill\\CompletePay.js":"17","C:\\Projects\\WinBtc247\\src\\components\\Refill\\CompleteWith.js":"18","C:\\Projects\\WinBtc247\\src\\components\\Refill\\Withdraw.js":"19","C:\\Projects\\WinBtc247\\src\\components\\Refill\\Invite.js":"20","C:\\Projects\\WinBtc247\\src\\components\\Ads\\Ads.js":"21","C:\\Projects\\WinBtc247\\src\\redux\\actions\\index.js":"22","C:\\Projects\\WinBtc247\\src\\redux\\reducers\\index.js":"23","C:\\Projects\\WinBtc247\\src\\sound\\Sound.js":"24","C:\\Projects\\WinBtc247\\src\\components\\Graph.js":"25","C:\\Projects\\WinBtc247\\src\\components\\Main\\Dashboard.js":"26","C:\\Projects\\WinBtc247\\src\\components\\Main\\RightSector.js":"27","C:\\Projects\\WinBtc247\\src\\components\\riches.js":"28","C:\\Projects\\WinBtc247\\src\\redux\\actions\\music.js":"29","C:\\Projects\\WinBtc247\\src\\components\\fireworks.js":"30","C:\\Projects\\WinBtc247\\src\\redux\\actions\\game.js":"31","C:\\Projects\\WinBtc247\\src\\components\\Main\\Time.js":"32","C:\\Projects\\WinBtc247\\src\\components\\Main\\Preloader.js":"33","C:\\Projects\\WinBtc247\\src\\components\\Main\\SelectList.js":"34","C:\\Projects\\WinBtc247\\src\\components\\Main\\Rates.js":"35","C:\\Projects\\WinBtc247\\src\\api\\User.js":"36","C:\\Projects\\WinBtc247\\src\\components\\Main\\Rect\\Rect.js":"37","C:\\Projects\\WinBtc247\\src\\redux\\types.js":"38","C:\\Projects\\WinBtc247\\src\\redux\\reducers\\entry.js":"39","C:\\Projects\\WinBtc247\\src\\redux\\reducers\\game.js":"40","C:\\Projects\\WinBtc247\\src\\redux\\reducers\\sound.js":"41","C:\\Projects\\WinBtc247\\src\\api\\Api.js":"42"},{"size":591,"mtime":1616067477180,"results":"43","hashOfConfig":"44"},{"size":4637,"mtime":1616067477105,"results":"45","hashOfConfig":"44"},{"size":375,"mtime":1616067477185,"results":"46","hashOfConfig":"44"},{"size":213,"mtime":1616067477184,"results":"47","hashOfConfig":"44"},{"size":1323,"mtime":1616148956009,"results":"48","hashOfConfig":"44"},{"size":3079,"mtime":1616067477110,"results":"49","hashOfConfig":"44"},{"size":7632,"mtime":1616067477113,"results":"50","hashOfConfig":"44"},{"size":703,"mtime":1616067477110,"results":"51","hashOfConfig":"44"},{"size":10436,"mtime":1616067477108,"results":"52","hashOfConfig":"44"},{"size":3710,"mtime":1616067477108,"results":"53","hashOfConfig":"44"},{"size":1178,"mtime":1616067477109,"results":"54","hashOfConfig":"44"},{"size":7726,"mtime":1616067477111,"results":"55","hashOfConfig":"44"},{"size":4433,"mtime":1616067477120,"results":"56","hashOfConfig":"44"},{"size":5859,"mtime":1616067477119,"results":"57","hashOfConfig":"44"},{"size":3319,"mtime":1616067477121,"results":"58","hashOfConfig":"44"},{"size":7275,"mtime":1616067477122,"results":"59","hashOfConfig":"44"},{"size":844,"mtime":1616067477119,"results":"60","hashOfConfig":"44"},{"size":912,"mtime":1616067477119,"results":"61","hashOfConfig":"44"},{"size":2902,"mtime":1616067477121,"results":"62","hashOfConfig":"44"},{"size":2707,"mtime":1616067477120,"results":"63","hashOfConfig":"44"},{"size":883,"mtime":1616067477107,"results":"64","hashOfConfig":"44"},{"size":2377,"mtime":1616067477182,"results":"65","hashOfConfig":"44"},{"size":367,"mtime":1616067477184,"results":"66","hashOfConfig":"44"},{"size":1075,"mtime":1616067477185,"results":"67","hashOfConfig":"44"},{"size":10631,"mtime":1616067477111,"results":"68","hashOfConfig":"44"},{"size":14606,"mtime":1616067477113,"results":"69","hashOfConfig":"44"},{"size":8827,"mtime":1616085143271,"results":"70","hashOfConfig":"44"},{"size":7483,"mtime":1616067477123,"results":"71","hashOfConfig":"44"},{"size":1023,"mtime":1616149106779,"results":"72","hashOfConfig":"44"},{"size":9768,"mtime":1616067477123,"results":"73","hashOfConfig":"44"},{"size":2171,"mtime":1616073162838,"results":"74","hashOfConfig":"44"},{"size":970,"mtime":1616067477117,"results":"75","hashOfConfig":"44"},{"size":1078,"mtime":1616067477114,"results":"76","hashOfConfig":"44"},{"size":950,"mtime":1616067477117,"results":"77","hashOfConfig":"44"},{"size":3850,"mtime":1616151543536,"results":"78","hashOfConfig":"44"},{"size":1763,"mtime":1616067477106,"results":"79","hashOfConfig":"44"},{"size":232,"mtime":1616067477116,"results":"80","hashOfConfig":"44"},{"size":1436,"mtime":1616148942578,"results":"81","hashOfConfig":"44"},{"size":2666,"mtime":1616067477183,"results":"82","hashOfConfig":"44"},{"size":3980,"mtime":1616085109933,"results":"83","hashOfConfig":"44"},{"size":1372,"mtime":1616149035300,"results":"84","hashOfConfig":"44"},{"size":445,"mtime":1616067477106,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"5hjdi9",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\Projects\\WinBtc247\\src\\index.js",[],["184","185"],"C:\\Projects\\WinBtc247\\src\\App.js",[],"C:\\Projects\\WinBtc247\\src\\reportWebVitals.js",[],"C:\\Projects\\WinBtc247\\src\\redux\\store.js",[],"C:\\Projects\\WinBtc247\\src\\sound\\Playlist.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Auth\\restore.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Main\\Main.js",["186","187","188"],"import React, {useState, useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './main.scss';\r\nimport bitcoin from '../../images/bitcoin.svg';\r\nimport times from '../../images/times-solid.svg';\r\nimport Graph from \"../Graph\";\r\nimport RightSector from \"./RightSector\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport riches from \"../riches\";\r\nimport {\r\n    closeCongratulation,\r\n    closeYourLose,\r\n    createAd,\r\n    logoutQuestion,\r\n    prohibition, setRichesShow,\r\n    switchView\r\n} from \"../../redux/actions\";\r\nimport {money, stop} from \"../../redux/actions/music\";\r\nimport JS_FIREWORKS from \"../fireworks\";\r\nimport Time from \"./Time\";\r\nimport Preloader from \"./Preloader\";\r\nimport {userdata} from \"../../redux/actions/game\";\r\nimport SelectList from \"./SelectList\";\r\nimport Rates from \"./Rates\";\r\n\r\nconst fire = () => {\r\n    document.getElementById('fireworks-canvas').style.width = '100%'\r\n    document.getElementById('fireworks-canvas').style.height = '100%'\r\n    const firework = JS_FIREWORKS.Fireworks({\r\n        id: 'fireworks-canvas',\r\n        hue: 120,\r\n        particleCount: 100,\r\n        delay: 0,\r\n        minDelay: 5,\r\n        maxDelay: 10,\r\n        boundaries: {\r\n            top: 50,\r\n            bottom: 240,\r\n            left: 50,\r\n            right: 590\r\n        },\r\n        fireworkSpeed: 2,\r\n        fireworkAcceleration: 1.05,\r\n        particleFriction: .95,\r\n        particleGravity: 1.5\r\n    });\r\n    firework.start();\r\n};\r\n\r\nconst Main = ({history, view, showRiches, setRichesShow, switchView, course, lastWin, closeCongratulation, congratulation, yourlose, closeYourLose, currentCourse, money, muteToggle, logout, logoutQuestion, prohibition, userdata, lastWinGame, createAd, createAdProp, widthMode}) => {\r\n    useEffect(() => {\r\n        userdata();\r\n        fire();\r\n    }, [congratulation])\r\n    useEffect(() => {\r\n        fire();\r\n    }, [])\r\n    useEffect(()=> switchView(false), [])\r\n    let flag = course ? course.length : false;\r\n    return (\r\n        <div className={`${widthMode}-bg main`}>\r\n            <Preloader show={flag}/> <div className=\"riches\">\r\n                <ul style={{display: showRiches ? \"block\" : \"none\"}}>\r\n                    <img onClick={()=>setRichesShow(false)} src={times} width={30} alt=\"\"/>\r\n                    <li className=\"upper\"><span className=\"head\">User</span><span className=\"head\">Wins</span><span className=\"head\">Loses</span><span className=\"head\">Balance</span></li>\r\n                    {riches.map(man => (<li>\r\n                        <span>{man.name}</span><span>{man.wins}</span><span>{man.loses}</span><span>{man.balance}</span>\r\n                    </li>))}\r\n                </ul>\r\n            </div>\r\n            <div style={{display: congratulation ? \"block\" : \"none\"}} className=\"blur\">\r\n                <canvas width=\"640\" height=\"480\" id=\"fireworks-canvas\" style={{background: 'rgba(0,0,0, .2)'}}/>\r\n                <div className=\"round-dark win\">\r\n                    <h2>Congratulations</h2>\r\n                    <div className=\"text-center\">You won {lastWinGame || 1} <img src={bitcoin} width=\"15\" alt=\"bit\"/>\r\n                    </div>\r\n                    <div className=\"win-btn\">\r\n                        <button onClick={() => {\r\n                            closeCongratulation();\r\n                            userdata();\r\n                            document.getElementById('fireworks').pause();\r\n                            money();\r\n                        }} className=\"btn btn-primary\">ADD TO MY WALLET\r\n                        </button>\r\n                        <button disabled onClick={() => {\r\n                            closeCongratulation();\r\n                            userdata();\r\n                            document.getElementById('fireworks').pause();\r\n                            money();\r\n                        }} className=\"btn btn-primary\">WITHDRAW\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{display: yourlose ? \"block\" : \"none\"}} className=\"blur\">\r\n                <div className=\"round-dark win\">\r\n                    <h2>Your lose</h2>\r\n                    <div className=\"win-btn\">\r\n                        <button onClick={() => {\r\n                            closeYourLose();\r\n                            userdata();\r\n                        }} className=\"btn btn-primary\">Bet again\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{display: createAdProp ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                        <h2>This feature coming soon</h2>\r\n                        <button onClick={() => {\r\n                            createAd();\r\n                        }} className=\"btn btn-primary\">OK\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <main style={{display: flag ? 'block' : 'none'}}>\r\n                <div className=\"row main\">\r\n                    <div style={{display: widthMode === \"mobile\" && view ? \"none\" : \"flex\"}} className=\"left-sector\">\r\n                        {widthMode === \"mobile\" ? <Rates/> : <></>}\r\n                        <div className={`${widthMode} round globe`}>\r\n                            {widthMode === \"desktop\" ? <Time/> : <></>}\r\n                            <div>\r\n                                <h2 className=\"text-center\"><img src={bitcoin} className=\"m-2\" alt=\"course\"/>\r\n                                    {currentCourse} <span>$</span>\r\n                                </h2>\r\n                                <div>\r\n                                    {widthMode === \"desktop\" ? <SelectList/> : <></>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"graph-wrapper\">\r\n                                <div className=\"graph\">\r\n                                    <Graph gradient1={widthMode === \"desktop\" ? undefined : 20}\r\n                                           gradient2={widthMode === \"desktop\" ? undefined : 150}\r\n                                           chartHeight={widthMode === \"desktop\" ? 250 : 150}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Dashboard/>\r\n                    </div>\r\n                    {widthMode === \"desktop\" ? <RightSector/> : <></>}\r\n                    {widthMode === \"mobile\" && view ? <RightSector/> : <></>}\r\n\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        course: state.courseReducer.course,\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        lastWin: state.balanceReducer.lastWin,\r\n        lastWinGame: state.balanceReducer.lastWinGame,\r\n        congratulation: state.balanceReducer.congratulation,\r\n        yourlose: state.balanceReducer.yourlose,\r\n        logout: state.authReducer.logoutQuestion,\r\n        showRiches: state.authReducer.showRiches,\r\n        createAdProp: state.switchOptions.createAd,\r\n        widthMode: state.switchOptions.widthMode,\r\n        view: state.switchOptions.view\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    closeCongratulation,\r\n    closeYourLose,\r\n    money,\r\n    stop,\r\n    logoutQuestion,\r\n    prohibition,\r\n    userdata,\r\n    createAd,\r\n    switchView,\r\n    setRichesShow\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","C:\\Projects\\WinBtc247\\src\\components\\Auth\\gotodesktop.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Auth\\Auth.js",["189","190","191"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from \"react-router-dom\";\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport './auth.scss';\r\nimport {authorization, betWin, registration} from \"../../redux/actions\";\r\nimport {User} from \"../../api/User\";\r\nimport {fireworks, muteToggle} from \"../../redux/actions/music\";\r\n\r\nconst Auth = ({reg, authorization, registration, muteToggle, mute, betWin, fireworks, history, widthMode}) => {\r\n    const [password, setPassword] = useState(true)\r\n    const [passwordConfirm, setPasswordConfirm] = useState(true)\r\n    const [name, setName] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const [confpass, setConfpass] = useState('')\r\n    const [code, setCode] = useState('')\r\n    const [enterCode, setEnterCode] = useState(false)\r\n    const [err, setErr] = useState('')\r\n\r\n    const phoneRef = useRef(null);\r\n    const moveCaretToEnd = () => {\r\n        if (phoneRef.createTextRange) {\r\n            const r = phoneRef.createTextRange();\r\n            r.collapse(false);\r\n            r.select();\r\n        }\r\n    }\r\n    const clearData = () => {\r\n        setName('');\r\n        setPhone('');\r\n        setEmail('');\r\n        setPass('');\r\n        setConfpass('');\r\n        setErr('');\r\n        setCode('');\r\n        setEnterCode(false);\r\n    }\r\n    const setPhoneNumber = (value) => {\r\n        setPhone(value);\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const body = JSON.stringify({name, phone, email, pass, confpass});\r\n        if (confpass.length < 8 || confpass.length < 8) {\r\n            setErr('Password length must be 8 characters')\r\n        } else {\r\n            User.register(body)\r\n                .then(res => {\r\n                    if (res.data.status === \"success\") {\r\n                        sessionStorage.setItem('token', res.data.data.accessToken);\r\n                        history.push('/game');\r\n                        authorization();\r\n                        betWin();\r\n                        fireworks();\r\n                        if (!mute) {\r\n                            muteToggle();\r\n                        }\r\n                    } else {\r\n                        if (res.data.error) {\r\n                            setErr(res.data.error);\r\n                        } else return false;\r\n                    }\r\n                })\r\n                .catch(error => setErr(error.response.data.error))\r\n        }\r\n    }\r\n    // const codeSubmit = (e) => {\r\n    //     e.preventDefault();\r\n    //     User.code({code: code})\r\n    //         .then(res => {\r\n    //             if (res.data.status === \"success\") {\r\n    //                 if (widthMode === \"desktop\") {\r\n    //                     sessionStorage.setItem('token', res.data.data.accessToken);\r\n    //                     authorization();\r\n    //                     history.push('/game');\r\n    //                     if (!mute) {\r\n    //                         muteToggle();\r\n    //                     }\r\n    //                     betWin();\r\n    //                     fireworks();\r\n    //                 } else {\r\n    //                     history.push(\"/gotodesktop\")\r\n    //                 }\r\n    //             } else {\r\n    //                 if (res.data.error) {\r\n    //                     setErr(res.data.error);\r\n    //                 } else return false;\r\n    //             }\r\n    //         })\r\n    //         .catch(error => setErr(error.response.data.error))\r\n    // }\r\n\r\n    const handleLogin = event => {\r\n        event.preventDefault();\r\n        const body = JSON.stringify({phone, pass});\r\n\r\n        User.login(body)\r\n            .then(res => res)\r\n            .then(data => {\r\n                    // if (widthMode === \"desktop\") {\r\n                    if (data.data.status === \"success\") {\r\n                        sessionStorage.setItem('token', data.data.data.accessToken);\r\n                        history.push('/game');\r\n                        return authorization();\r\n                    } else if (data.data.error) {\r\n                        return setErr(data.data.error);\r\n                    } else {\r\n                        return setErr('error, try again later')\r\n                    }\r\n                    // } else {\r\n                    //     history.push(\"/gotodesktop\")\r\n                    // }\r\n                }\r\n            )\r\n            .catch(error => setErr(error.response.data.error));\r\n        // authorization();\r\n    }\r\n    if (reg) {\r\n\r\n\r\n        return (\r\n            <div className=\"round-dark auth\">\r\n                <span onClick={() => {\r\n                    registration();\r\n                    clearData();\r\n                }} className=\"back\">&larr;</span>\r\n                <h2 className=\"\">Registration</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input onChange={e => {\r\n                            setName(e.target.value);\r\n                            setErr('');\r\n                        }}\r\n                               value={name}\r\n                               placeholder=\"John Lucky\"\r\n                               id=\"name\" name=\"name\" type=\"text\" required/>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <label htmlFor=\"phone\">Phone</label>\r\n                        <PhoneInput onChange={e => {\r\n                            setErr('');\r\n                            setPhoneNumber(e);\r\n                            moveCaretToEnd();\r\n                        }} id=\"phone\" ref={phoneRef} limitMaxLength={true} placeholder='+123-456-78-90'\r\n                                    value={phone} international\r\n                                    displayInitialValueAsLocalNumber required/>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input onChange={e => {\r\n                            setEmail(e.target.value);\r\n                            setErr('');\r\n                        }}\r\n                               value={email}\r\n                               placeholder=\"lucky@mail.com\"\r\n                               id=\"email\" name=\"email\" type=\"email\" required/>\r\n                    </div>\r\n                    <div className={password ? 'pass' : 'text'}>\r\n                        <span onClick={() => setPassword(!password)} className=\"eye\"/>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input min='8' onChange={e => {\r\n                            setPass(e.target.value);\r\n                            setErr('');\r\n                        }}\r\n                               value={pass}\r\n                               id=\"password\" name=\"password\" type={password ? 'password' : 'text'} required/>\r\n                    </div>\r\n                    <div className={passwordConfirm ? 'pass' : 'text'}>\r\n                        <span onClick={() => setPasswordConfirm(!passwordConfirm)} className=\"eye\"/>\r\n                        <label htmlFor=\"passwordConfirm\">Repeat password</label>\r\n                        <input min='8' onChange={e => {\r\n                            setConfpass(e.target.value);\r\n                            setErr('');\r\n                        }}\r\n                               value={confpass}\r\n                               id=\"passwordConfirm\" name=\"passwordConfirm\"\r\n                               type={passwordConfirm ? 'password' : 'text'}\r\n                               required/>\r\n                    </div>\r\n                    <span style={{display: err ? 'block' : 'none'}} className=\"error red\">{err}</span>\r\n                    <button>SIGN UP</button>\r\n                    <Link to='/support' className=\"support-link\">Need support?</Link>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n\r\n    } else {\r\n        return (\r\n            <div className=\"round-dark auth\">\r\n               <span onClick={() => {\r\n                   clearData();\r\n               }} className=\"back\"><Link to=\"/\">&larr;</Link></span>\r\n                <h2>Welcome</h2>\r\n                <form onSubmit={handleLogin}>\r\n                    <div className=\"\">\r\n                        <label htmlFor=\"phone\">Phone</label>\r\n                        <PhoneInput onChange={e => {\r\n                            setPhone(e);\r\n                            setErr('');\r\n                        }} id=\"phone\" limitMaxLength={true} placeholder='+123-456-78-90' value={phone} international\r\n                                    displayInitialValueAsLocalNumber required/>\r\n                    </div>\r\n                    <div className={password ? 'pass' : 'text'}>\r\n                        <span onClick={() => setPassword(!password)} className=\"eye\"/>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onInput={e => {\r\n                            setPass(e.target.value);\r\n                            setErr('');\r\n                        }} id=\"password\" name=\"password\"\r\n                               type={password ? 'password' : 'text'} required/>\r\n                    </div>\r\n                    <span style={{display: err ? 'block' : 'none'}} className=\"error red\">{err}</span>\r\n                    <Link to=\"/restore\" className=\"forgot mb-3\">Forgot password?</Link>\r\n                    <button>LOG IN</button>\r\n                    <span>or</span>\r\n                    <button onClick={e => {\r\n                        e.preventDefault();\r\n                        registration();\r\n                        clearData();\r\n                    }}>SIGN UP\r\n                    </button>\r\n                    <Link to=\"/support\" className=\"support-link\">Need support?</Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reg: state.authReducer.reg,\r\n        mute: state.soundReducer.mute,\r\n        widthMode: state.switchOptions.widthMode\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    authorization,\r\n    registration,\r\n    muteToggle,\r\n    betWin,\r\n    fireworks\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","C:\\Projects\\WinBtc247\\src\\components\\Auth\\Reset.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Auth\\Support.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Header\\Header.js",["192","193","194"],"import React, {useState, useEffect} from 'react';\r\nimport './header.scss';\r\nimport logo from '../../images/logoLeft.svg';\r\n// import logo2 from '../../images/logoCentre.svg';\r\nimport burger from '../../images/burger.png';\r\nimport refreshIcon from '../../images/refresh.svg';\r\nimport sound from '../../images/volume-up-solid.svg';\r\nimport noSound from '../../images/volume-mute-solid.svg';\r\nimport signup from '../../images/user_plus.svg';\r\nimport login from '../../images/sign_in.svg';\r\nimport bets from '../../images/bets.png';\r\nimport wallet from '../../images/wallet.png';\r\nimport {connect} from \"react-redux\";\r\nimport {authorization, createAd, logoutQuestion, prohibition, registration, switchView} from \"../../redux/actions\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport {muteToggle} from \"../../redux/actions/music\";\r\n\r\nconst Header = ({\r\n                    auth,\r\n                    reg,\r\n                    mute,\r\n                    muteToggle,\r\n                    logoutQuestion,\r\n                    createAd,\r\n                    logout,\r\n                    registration,\r\n                    prohibition,\r\n                    authorization,\r\n                    history,\r\n                    unauthorized,\r\n                    predict,\r\n                    refresh,\r\n                    view,\r\n                    switchView,\r\n                    widthMode\r\n                }) => {\r\n    const [menu, setMenu] = useState(false);\r\n    useEffect(() => {\r\n        authorization();\r\n    }, [])\r\n    const handleMute = () => {\r\n        muteToggle();\r\n    }\r\n    let location = useLocation();\r\n    let isGame = location.pathname === \"/game\";\r\n    useEffect(() => {\r\n        if (location.pathname === \"/\" || location.pathname === \"/login\") {\r\n            prohibition();\r\n        }\r\n    }, [location.pathname])\r\n    return (\r\n        <div>\r\n            <header className=\"header\">\r\n                <div style={{display: logout ? \"block\" : \"none\"}} className=\"blur\">\r\n                    <div className=\"round-dark win\">\r\n                        <h2>Are you sure?</h2>\r\n                        <div className=\"win-btn\">\r\n                            <button onClick={() => {\r\n                                logoutQuestion();\r\n                                sessionStorage.removeItem('token');\r\n                                prohibition();\r\n                                window.location.reload();\r\n                            }} className=\"btn btn-primary\"><Link to=\"/\">LOG OUT</Link>\r\n                            </button>\r\n                            <button onClick={() => {\r\n                                logoutQuestion();\r\n                            }} className=\"btn btn-primary\">STAY\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"wrap-header\">\r\n                    <nav className=\"navbar\">\r\n                        <a onClick={() => {\r\n                            sessionStorage.setItem(\"saveReload\", \"0\");\r\n                            sessionStorage.removeItem('token');\r\n                            window.location.reload();\r\n                        }} className=\"navbar-brand\">\r\n                            <img src={logo} alt=\"logo\" height=\"23\"/>\r\n                        </a>\r\n                    </nav>\r\n                    <div className=\"header-right\">\r\n                        <img onClick={() => {\r\n                            if (sessionStorage.getItem(\"token\")) {\r\n                                sessionStorage.setItem(\"saveReload\", \"1\");\r\n                            }\r\n                            window.location.reload();\r\n                        }} style={{marginRight: \"30px\"}} className=\"sound reload\" height=\"18\" width=\"18\"\r\n                             src={refreshIcon}\r\n                             alt=\"refresh\"/>\r\n                        <img onClick={handleMute} className=\"sound \" src={mute ? sound : noSound} height=\"18\" width=\"18\"\r\n                             alt=\"sound\"/>\r\n                        {!auth ? <div className=\"startHeader\">\r\n                            <Link onClick={() => {\r\n                                if (reg) {\r\n                                    registration();\r\n                                }\r\n                            }} className=\"login auth-header\" to=\"/login\">LOG IN</Link>\r\n                            <Link onClick={() => {\r\n                                if (reg) {\r\n                                    registration();\r\n                                }\r\n                            }} className=\"login auth-header-icon\" to=\"/login\">\r\n                                <img width={18} src={login} alt=\"signin\"/>\r\n                            </Link>\r\n                            <Link onClick={registration} className=\"signup auth-header\" to=\"/signup\">SIGN UP</Link>\r\n                            <Link onClick={registration} className=\"signup auth-header-icon\" to=\"/signup\">\r\n                                <img width={18} src={signup} alt=\"signup\"/></Link>\r\n                        </div> : null}\r\n                        <div onClick={(e) => {\r\n                            setMenu(!menu)\r\n                        }}\r\n                             style={{\r\n                                 display: auth && isGame ? 'flex' : 'none',\r\n                                 pointerEvents: predict ? \"none\" : \"auto\"\r\n                             }}\r\n                             className=\"menu\">\r\n                            <img className=\"burger\"\r\n                                 src={burger} alt=\"icon\"/>\r\n                            <ul style={{display: menu ? 'block' : 'none'}} className=\"burger-menu\">\r\n                                {/*<li className=\"burger-menu-item bord\"><Link to=\"/ads\">Create ad</Link></li>*/}\r\n                                <li onClick={createAd} className=\"burger-menu-item bord\">Create ad</li>\r\n                                <li onClick={createAd} className=\"burger-menu-item bord\"><span>My ads</span></li>\r\n                                <li className=\"burger-menu-item\" onClick={() => {\r\n                                    logoutQuestion();\r\n                                }}>Log out\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div style={{display: isGame && widthMode !== \"desktop\" ? \"block\" : \"none\"}} className=\"tabs\">\r\n                    <div className=\"wrap-tabs\">\r\n                        <div onClick={() => switchView(false)} className={view ? \"tab bets\" : \"tab bets active\"}>\r\n                            <img src={bets} alt=\"tab\"/>\r\n                        </div>\r\n                        <div onClick={() => switchView(true)} className={!view ? \"tab wallet\" : \"tab wallet active\"}>\r\n                            <img src={wallet} alt=\"tab\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.authReducer.auth,\r\n        reg: state.authReducer.reg,\r\n        mute: state.soundReducer.mute,\r\n        logout: state.authReducer.logoutQuestion,\r\n        unauthorized: state.authReducer.unauthorized,\r\n        predict: state.balanceReducer.predict,\r\n        widthMode: state.switchOptions.widthMode,\r\n        view: state.switchOptions.view\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    muteToggle,\r\n    logoutQuestion,\r\n    createAd,\r\n    registration,\r\n    prohibition,\r\n    authorization,\r\n    switchView\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","C:\\Projects\\WinBtc247\\src\\components\\Refill\\Refill.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Refill\\Btc.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Refill\\Usd.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Start\\Start.js",["195","196","197"],"import React, {useState, useEffect} from 'react';\r\nimport './start.scss';\r\nimport Graph from \"../Graph\";\r\nimport Time from \"../Main/Time\";\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\nimport {connect} from \"react-redux\";\r\nimport arrowDown from \"../../images/arrowDown.svg\";\r\nimport arrowUp from \"../../images/arrowUp.svg\";\r\nimport bull from \"../../images/bull_start.png\";\r\nimport bear from \"../../images/bear_start.png\";\r\nimport promotion1 from \"../../video/promotion.mp4\";\r\nimport promotion2 from \"../../video/promotion.webm\";\r\nimport poster from \"../../video/poster.jpg\";\r\nimport Rect from \"../Main/Rect/Rect\";\r\nimport Preloader from \"../Main/Preloader\";\r\nimport bitsybets from \"../../images/BITCYBETS.svg\";\r\nimport coin from \"../../images/coin.svg\";\r\nimport {userdata} from \"../../redux/actions/game\";\r\nimport {registration} from \"../../redux/actions\";\r\n\r\n\r\nconst Start = ({currentCourse, course, history, lastSeconds, userdata, widthMode, registration}) => {\r\n    const [timeGame, setTimeGame] = useState(false);\r\n    const [bet, setBet] = useState('');\r\n    const [predict, setPredict] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (lastSeconds % 10 === 0) {\r\n            setTimeGame(true);\r\n        }\r\n    }, [lastSeconds])\r\n    useEffect(() => {\r\n        if (lastSeconds % 10 === 0) {\r\n            if (bet === 'down' && currentCourse < course[course.length - 2]) {\r\n                setPredict('win');\r\n                setBet('');\r\n            } else if (bet === 'down' && currentCourse > course[course.length - 2]) {\r\n                setPredict('lose');\r\n                setBet('');\r\n            } else if (bet === 'up' && currentCourse > course[course.length - 2]) {\r\n                setPredict('win');\r\n                setBet('');\r\n            } else if (bet === 'up' && currentCourse < course[course.length - 2]) {\r\n                setPredict('lose');\r\n                setBet('');\r\n            } else {\r\n                setBet('');\r\n            }\r\n        }\r\n\r\n    }, [currentCourse])\r\n    return (\r\n        <div  className=\"start\">\r\n\r\n            <div style={{display: predict ? \"block\" : \"none\"}} className=\"blur soon\">\r\n                <div className=\"round-dark win\">\r\n                    <div className=\"win-btn\">\r\n                       <span onClick={() => {\r\n                           setPredict('');\r\n                           setBet('');\r\n                       }} className=\"chross\">&#10008;</span>\r\n                        <h2>You did great! <br/> Join now!</h2>\r\n                        <button onClick={() => {\r\n                            setPredict('');\r\n                            setBet('');\r\n                            history.push('/login')\r\n                        }} className=\"btn btn-primary\">LOG IN\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            setPredict('');\r\n                            setBet('');\r\n                            history.push('/signup');\r\n                            registration();\r\n                        }} className=\"btn btn-primary\">SIGN UP\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`${widthMode}-start round round-dark`}>\r\n                <div className=\"bull-start-mobile\"><img src={bull} width=\"\" alt=\"bull\"/></div>\r\n                <div className=\"bear-start-mobile\"><img src={bear} width=\"\" alt=\"bear\"/></div>\r\n                <div className=\"bull-start\"><img src={bull} alt=\"bull\"/></div>\r\n                <div className=\"bear-start\"><img src={bear} alt=\"bear\"/></div>\r\n                <div className=\"text text-center\">\r\n                    <h2>\r\n                        <span className=\"gold\">WIN</span>BTC<span className=\"gold\">24<b className=\"gold\">/</b>7</span>\r\n                    </h2>\r\n                    {/*<p className=\"mt-3\">Make real Bitcoin bets</p>*/}\r\n                    <video style={{objectFit: \"cover\"}} controls=\"controls\" poster={poster} >\r\n                        <source src={promotion1}  type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'/>\r\n                        <source src={promotion2} type='video/webm; codecs=\"vp8, vorbis\"'/>\r\n                        {/*<source src=\"video/duel.ogv\" type='video/ogg; codecs=\"theora, vorbis\"'>*/}\r\n\r\n                    </video>\r\n                </div>\r\n                <div className=\"dark\">\r\n                    <Time/>\r\n                    <div className=\"course\">\r\n                        <h2 style={{opacity: !currentCourse ? 0 : 1}} className=\"text-center\"><img src={bitcoin} alt=\"course\"/>\r\n                            {currentCourse} <span>$</span>\r\n                        </h2>\r\n                        <div>\r\n                            {/*<SelectList/>*/}\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: !currentCourse ? \"none\" : \"block\"}} className=\"graph\">\r\n                        <Graph gradient1={20} gradient2={150} chartHeight={widthMode === \"desktop\" ? 200 : 150}/>\r\n                    </div>\r\n                    <div style={{display: currentCourse ? \"none\" : \"block\"}}  className=\"load\">\r\n                        <div className=\"wrap-img-preload\">\r\n                            <img className=\"coin1\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin2\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin3\"  src={coin} alt=\"\"/>\r\n                            <img className=\"coin4\"  src={coin} alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <div className=\"wrap-btn\">\r\n                            <button disabled={bet || !currentCourse} onClick={() => setBet('down')}\r\n                                    className=\"btn green green-start predict-btn\"\r\n                                    id=\"down\">PREDICT UP\r\n                                <img src={arrowUp} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                <Rect start={timeGame} infinite={'infinity'} idButton={'down'}\r\n                                      mode={timeGame ? 'rectUp' : ''}/>\r\n                            </button>\r\n                            <button disabled={bet || !currentCourse} onClick={() => setBet('up')}\r\n                                    className=\"btn red red-start predict-btn\"\r\n                                    id=\"down\">PREDICT DOWN\r\n                                <img src={arrowDown} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                <Rect infinite={'infinity'} idButton={'down'} mode={timeGame ? 'rectDown' : ''}/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"bg\"/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        course: state.courseReducer.course,\r\n        lastSeconds: state.courseReducer.lastSeconds,\r\n        widthMode: state.switchOptions.widthMode\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    userdata,\r\n    registration\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Start);\r\n","C:\\Projects\\WinBtc247\\src\\components\\Refill\\CompletePay.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Refill\\CompleteWith.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Refill\\Withdraw.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Refill\\Invite.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Ads\\Ads.js",[],"C:\\Projects\\WinBtc247\\src\\redux\\actions\\index.js",[],"C:\\Projects\\WinBtc247\\src\\redux\\reducers\\index.js",[],"C:\\Projects\\WinBtc247\\src\\sound\\Sound.js",["198","199"],"import React, {useRef, useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {stop} from '../redux/actions/music';\r\n\r\nconst Sound = ({play, param, stop, mute}) => {\r\n    const audRef = useRef(null);\r\n    const handlePlay = () => {\r\n        audRef.current.play();\r\n    }\r\n    const muted = () => {\r\n        audRef.current.muted = !mute;\r\n    }\r\n    useEffect(() => {\r\n        if (param.id === play) {\r\n            audRef.current.id === 'fireworks' ? audRef.current.volume = 0.3 : audRef.current.volume = 0.7;\r\n            handlePlay();\r\n        }\r\n        stop();\r\n    }, [param.id, play, handlePlay]);\r\n    useEffect(() => {\r\n        muted();\r\n    }, [muted]);\r\n    return (\r\n        <div className=\"sound\">\r\n            <audio ref={audRef} id={param.id} src={param.effect}/>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        play: state.soundReducer.play,\r\n        mute: state.soundReducer.mute\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    stop\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sound);\r\n","C:\\Projects\\WinBtc247\\src\\components\\Graph.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Main\\Dashboard.js",["200","201","202","203"],"import React from 'react';\r\nimport bitcoin from \"../../images/bitcoin.svg\";\r\nimport arrowUp from \"../../images/arrowUp.svg\";\r\nimport arrowDown from \"../../images/arrowDown.svg\";\r\nimport {connect} from \"react-redux\";\r\nimport {betLose, betWin, closeCongratulation} from \"../../redux/actions\";\r\nimport {bell, click, tic, fireworks, muteToggle} from \"../../redux/actions/music\";\r\nimport Rates from \"./Rates\";\r\nimport {User} from \"../../api/User\";\r\nimport {predictClear, predictDown, predictUp, userdata} from \"../../redux/actions/game\";\r\nimport Rect from \"./Rect/Rect\";\r\nimport SelectList from \"./SelectList\";\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bet: .0001,\r\n            counter: 10,\r\n            // counterBet: 10,\r\n            initialOffset: 440,\r\n            gameStart: undefined\r\n        };\r\n        this.setBet = this.setBet.bind(this);\r\n        this.predictSubmit = this.predictSubmit.bind(this);\r\n        // this.countSec = this.countSec.bind(this);\r\n        this.betDone = this.betDone.bind(this);\r\n    }\r\n\r\n    setBet(e) {\r\n        let bet = +e.target.value.slice(0, 5);\r\n        if (!bet) {\r\n            bet = 0.0001;\r\n        }\r\n        if (bet > this.props.balance) {\r\n            bet = this.props.balance;\r\n        }\r\n        this.setState((state) => ({...state, ...{bet: bet ? bet : 0.0001}}));\r\n    }\r\n\r\n    betDone(e) {\r\n        let rate = e.target.id;\r\n        this.props.click();\r\n        if (rate === 'up') {\r\n            this.props.predictUp({value: this.state.bet.toString()});\r\n        } else if (rate === 'down') {\r\n            this.props.predictDown({value: this.state.bet.toString()});\r\n        }\r\n    }\r\n\r\n    // countSec() {\r\n    //     const betTimer = setInterval(() => {\r\n    //         this.setState((state) => ({...state, counterBet: state.counterBet - 1}));\r\n    //         // this.props.tic();\r\n    //     }, 1000)\r\n    //     return setTimeout(() => {\r\n    //         clearInterval(betTimer);\r\n    //         this.setState((state) => ({...state, counterBet: 10}));\r\n    //     }, 10000)\r\n    // }\r\n\r\n    predictSubmit() {\r\n        const timer = setInterval(() => {\r\n            this.setState((state) => ({...state, counter: state.counter - 1}));\r\n            // this.props.tic();\r\n        }, 1000)\r\n        const predict = this.props.predict;\r\n        return setTimeout(() => {\r\n            clearInterval(timer);\r\n            this.setState((state) => ({...state, counter: 10}));\r\n            User.userdata()\r\n                .then(data => {\r\n                    if (+data.data.data.lastWin === 1 && predict !== '') {\r\n                        // this.props.bell();\r\n                        this.props.betWin();\r\n                        this.props.fireworks();\r\n                    } else if (+data.data.data.lastWin === -1 && predict !== '') {\r\n                        this.props.bell();\r\n                        this.props.betLose();\r\n                        this.props.userdata();\r\n                    } else if (this.props.up > 0 && this.props.down > 0) {\r\n                        this.props.bell();\r\n                        this.props.userdata();\r\n                    } else {\r\n                        this.props.userdata();\r\n                    }\r\n                })\r\n            this.setState((state) => ({...state, gameStart: undefined}));\r\n            this.props.predictClear();\r\n            // this.countSec();\r\n        }, 10000)\r\n    }\r\n\r\n    render() {\r\n        const {bet, counter, initialOffset} = this.state;\r\n        const {balance, predict, upBets, downBets, up, down, lastSeconds, widthMode} = this.props;\r\n        const time = 10;\r\n        const i = 10 - counter || 1;\r\n        let timeBet = lastSeconds % 20 === 0 || lastSeconds % 20 === 5;\r\n        let startGame = lastSeconds % 20 === 10 || lastSeconds % 20 === 15;\r\n\r\n        if (startGame && this.state.gameStart === undefined) {\r\n            this.setState((state) => ({...state, gameStart: lastSeconds}));\r\n            this.predictSubmit();\r\n        }\r\n\r\n        return (\r\n            <div className={`${widthMode} row bottom-container`}>\r\n                {widthMode === \"desktop\" ? <Rates/> : <></>}\r\n                <div className={`${widthMode} round dashboard`}>\r\n                    <div className=\"range\">\r\n                        <div className=\"form-label d-flex justify-content-between\">\r\n                            <div>\r\n                                <h2 className={predict || startGame ? \"text-left\" : \"make-bet text-left\"}>Make your\r\n                                    bet</h2>\r\n                                {/*<span className=\"time-bet\">{timeBet ? counterBet : ''}</span>*/}\r\n                            </div>\r\n                            <div>\r\n                                {widthMode === \"mobile\" ? <SelectList/> : <></>}\r\n                                <span className={balance - bet >= 0 ? '' : 'red'}>\r\n                                <input id=\"numberBet\" type=\"number\" step=\"0.0001\" min=\"0.0001\" max=\"1\"\r\n                                       className={balance - bet >= 0 ? '' : 'red'}\r\n                                       disabled={predict || !timeBet}\r\n                                       onInput={this.setBet}\r\n                                       value={bet}/>\r\n                                <img className=\"numberBet\" width=\"15\" src={bitcoin} alt=\"up\"/>\r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n                        <form onSubmit={e => e.preventDefault()}>\r\n                            <div className=\"form\">\r\n                                <div className=\"bet\">\r\n                                    <input min=\"0.0001\" max=\"1\" step=\"0.0001\"\r\n                                           type=\"range\"\r\n                                           disabled={predict || !timeBet || startGame}\r\n                                           value={bet}\r\n                                           style={{backgroundImage: `linear-gradient(to right, ${balance - bet >= 0 ? '#32D74B' : '#FF453A'} 0%, ${balance - bet >= 0 ? '#32D74B' : '#FF453A'} ${bet * 100}%, #fff ${bet * 100}%, white 100%)`}}\r\n                                           onChange={this.setBet}\r\n                                           className={balance - bet >= 0 ? 'green-range' : 'red-range'}\r\n                                           id=\"range\"/>\r\n                                </div>\r\n                                <div className='wrap-btn'>\r\n\r\n                                    {startGame && (predict === 'down' || !predict)\r\n                                        ? <span style={{display: startGame && !predict ? 'flex' : 'none'}}\r\n                                                className=\"off\">All bets are off</span>\r\n                                        : <div style={{\r\n                                            display: predict === 'up' || !predict ? 'block' : 'none',\r\n                                            transform: startGame && (predict === 'down' || !predict) ? 'scale(0)' : 'scale(1)'\r\n                                        }} className=\"up\">\r\n                                            <div className=\"profit\">\r\n                                                <span style={{display: widthMode === \"mobile\" ? \"block\" : \"inline\"}}g className=\"green\">Your profit</span>\r\n                                                <span>\r\n                                                    {(bet * 2 * 0.97).toFixed(4)}\r\n                                                </span>\r\n                                                <img src={bitcoin} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                            </div>\r\n                                            <button disabled={predict || balance - bet < 0 || !timeBet}\r\n                                                    onClick={(e) => {\r\n                                                        e.preventDefault();\r\n                                                        this.betDone(e);\r\n                                                    }}\r\n                                                    className=\"btn green predict-btn\">PREDICT UP\r\n\r\n                                                <img src={arrowUp} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                                <Rect idButton={'up'} mode={timeBet ? 'rectUp' : \"\"}/>\r\n                                            </button>\r\n                                        </div>}\r\n\r\n                                    <p\r\n                                        style={{\r\n                                            display: startGame && predict === 'up' ? 'flex' : 'none'\r\n                                        }}\r\n                                        id=\"predict\"\r\n                                        className=\"btn bet-btn col-sm-4\">\r\n                                        <span className=\"gold\">{counter}\r\n                                            <span className='circle'>\r\n                                                <svg width=\"160\" height=\"160\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <g>\r\n                                                    <title>Layer 1</title>\r\n                                                    <circle\r\n                                                        strokeDasharray={440}\r\n                                                        strokeDashoffset={counter === 10 ? -2 * initialOffset : ((i + 1) * (initialOffset / time)) - 2 * initialOffset}\r\n                                                        id=\"circle\" className=\"circle_animation\" r=\"69.85699\" cy=\"81\"\r\n                                                        cx=\"81\" strokeWidth=\"6\"\r\n                                                        stroke=\"#F7931A\" fill=\"none\"/>\r\n                                                </g>\r\n                                            </svg>\r\n                                            </span>\r\n                                        </span>\r\n                                    </p>\r\n\r\n\r\n                                    <p style={{\r\n                                        display: startGame && (predict === 'down' || !predict) ? 'flex' : 'none'\r\n                                    }}\r\n                                       id=\"predict\"\r\n                                       className=\"btn bet-btn col-sm-4\">\r\n                                        <span className=\"gold\">{counter}\r\n                                            <span className='circle'>\r\n                                                <svg width=\"160\" height=\"160\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <g>\r\n                                                    <title>Layer 1</title>\r\n                                                    <circle\r\n                                                        strokeDasharray={440}\r\n                                                        strokeDashoffset={counter === 10 ? -2 * initialOffset : ((i + 1) * (initialOffset / time)) - 2 * initialOffset}\r\n                                                        id=\"circle\" className=\"circle_animation\" r=\"69.85699\" cy=\"81\"\r\n                                                        cx=\"81\" strokeWidth=\"6\"\r\n                                                        stroke=\"#F7931A\" fill=\"none\"/>\r\n                                                </g>\r\n                                            </svg>\r\n                                            </span>\r\n                                        </span>\r\n                                    </p>\r\n\r\n                                    {startGame && (predict === 'up' || !predict)\r\n                                        ? <></>\r\n                                        : <div style={{display: (predict === 'down' || !predict) ? 'block' : 'none'}}\r\n                                               className=\"down\">\r\n                                            <div className=\"profit\">\r\n                                                <span style={{display: widthMode === \"mobile\" ? \"block\" : \"inline\"}} className=\"red\">Your profit</span>\r\n                                                <span>\r\n                                                    {(bet * 2 * 0.97).toFixed(4)}\r\n                                                </span>\r\n                                                <img src={bitcoin} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                            </div>\r\n                                            <button disabled={predict || balance - bet < 0 || !timeBet}\r\n                                                    onClick={(e) => {\r\n                                                        e.preventDefault();\r\n                                                        this.betDone(e);\r\n                                                    }}\r\n                                                    className=\"btn red predict-btn\" id=\"down\">PREDICT DOWN\r\n                                                <img src={arrowDown} width=\"15\" height=\"20\" alt=\"b\"/>\r\n                                                <Rect idButton={'down'} mode={timeBet ? 'rectDown' : \"\"}/>\r\n                                            </button>\r\n                                        </div>}\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        balance: state.balanceReducer.balance,\r\n        congratulation: state.balanceReducer.congratulation,\r\n        course: state.courseReducer.course,\r\n        currentCourse: state.courseReducer.currentCourse,\r\n        currentTime: state.courseReducer.currentTime,\r\n        lastSeconds: state.courseReducer.lastSeconds,\r\n        lastWin: state.balanceReducer.lastWin,\r\n        predict: state.balanceReducer.predict,\r\n        downBets: state.balanceReducer.downBets,\r\n        upBets: state.balanceReducer.upBets,\r\n        up: state.balanceReducer.up,\r\n        down: state.balanceReducer.down,\r\n        widthMode: state.switchOptions.widthMode\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    betWin,\r\n    betLose,\r\n    predictUp,\r\n    predictDown,\r\n    predictClear,\r\n    click,\r\n    tic,\r\n    bell,\r\n    fireworks,\r\n    closeCongratulation,\r\n    muteToggle,\r\n    userdata\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","C:\\Projects\\WinBtc247\\src\\components\\Main\\RightSector.js",["204","205","206"],"import React, {useEffect, useState} from 'react';\r\nimport deposit from '../../images/deposit.svg';\r\nimport withdraw from '../../images/withdraw.svg';\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {click, roulette, spingo, win} from \"../../redux/actions/music\";\r\nimport switchWallet from \"../../images/switch_wallet.svg\";\r\nimport wheel from \"../../images/wheel.svg\";\r\nimport spin from \"../../images/spin.png\";\r\nimport pointer from \"../../images/pointer.png\";\r\nimport {changeDemo, userdata} from \"../../redux/actions/game\";\r\nimport {createAd} from \"../../redux/actions\";\r\nimport {User} from \"../../api/User\";\r\n\r\n\r\nconst RightSector = ({\r\n                         balance,\r\n                         win,\r\n                         wheelAvailable,\r\n                         roulette,\r\n                         spingo,\r\n                         lastWinGame,\r\n                         lastgame,\r\n                         wins,\r\n                         colorBlalance,\r\n                         click,\r\n                         userdata,\r\n                         name,\r\n                         isDemo,\r\n                         threewins,\r\n                         changeDemo,\r\n                         createAd,\r\n                         predict\r\n                     }) => {\r\n    const [switcher, setSwitcher] = useState(false);\r\n    const [chance, setChance] = useState(0);\r\n    const [go, setGo] = useState(false);\r\n    const [banner, setBanner] = useState(\"banner one round-dark\");\r\n    const balanceColor = {color: colorBlalance === 'green' ? '#32D74B' : colorBlalance === 'red' ? '#FF453A' : '#FFFFFF'}\r\n\r\n    useEffect(() => {\r\n        const addBanner = setInterval(() => {\r\n            if (banner === \"banner one round-dark\") {\r\n                setBanner(\"banner three round-dark\");\r\n                // } else if (banner === \"banner two round-dark\") {\r\n                //     setBanner(\"banner three round-dark\");\r\n            } else if (banner === \"banner three round-dark\") {\r\n                setBanner(\"banner one round-dark\");\r\n            }\r\n        }, 30000)\r\n        console.log(chance)\r\n        return () => clearInterval(addBanner)\r\n    }, [banner])\r\n    useEffect(() => {\r\n        userdata();\r\n    }, [])\r\n\r\n    const spinHander = () => {\r\n        console.log(wheelAvailable)\r\n        if(true)  {\r\n            setChance(0);\r\n            spingo(true);\r\n            User.wheelSPeen()\r\n                .then(res => {\r\n                    setChance((+res.data.data - 3) * 45 + 720);\r\n                    roulette();\r\n                    setGo(true);\r\n                    setTimeout(() => {\r\n                        setGo(false);\r\n                        spingo(false);\r\n                    }, 5000)\r\n                })\r\n        } \r\n    }\r\n\r\n    return (\r\n        <div className=\"right-sector\">\r\n            <div style={{display: switcher ? \"block\" : \"none\"}} className=\"blur\">\r\n                <div className=\"round-dark win\">\r\n                    <h2>My bitcoin wallet</h2>\r\n                    {/*<div className=\"text-center\">You are going to play on real <br/> money. Are you sure? </div>*/}\r\n                    <div className=\"win-btn\">\r\n                        <button onClick={() => {\r\n                            changeDemo();\r\n                            setSwitcher(false);\r\n                        }}\r\n                                className=\"btn btn-primary\">{isDemo ? 'Bet real bitcoin' : 'Demo wallet'}\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            userdata();\r\n                            setSwitcher(false);\r\n                        }} className=\"btn btn-primary\">{!isDemo ? 'Stay my wallet' : 'Continue demo'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"score-wrap round-dark\">\r\n                <h2>{isDemo ? \"Demo wallet\" : \"My wallet\"}\r\n                    <span onClick={() => {\r\n                        if (!predict) {\r\n                            setSwitcher(true)\r\n                        }\r\n                    }} className={isDemo ? \"switch-wrapper demo\" : \"switch-wrapper real\"}\r\n                          style={predict ? {filter: 'grayscale(1)', opacity: .5} : null}>\r\n                    <img src={switchWallet} alt=\"\"/>\r\n                </span></h2>\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <div className=\"label\">Name</div>\r\n                            <div className=\"score\" id=\"name\">{name}</div>\r\n                        </td>\r\n                        <td>\r\n                            <div className=\"label\">Wins</div>\r\n                            <div className=\"score\" id=\"wins\">{wins}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <div className=\"label\">Balance</div>\r\n                            <div style={balanceColor} className=\"score\" id=\"balance\">{balance} BTC</div>\r\n                        </td>\r\n                        <td>\r\n                            <div className=\"label\">Last Win</div>\r\n                            <div className=\"score\" id=\"lastWin\">{lastWinGame || '0.000'} BTC</div>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                {!isDemo\r\n                    ? <div>\r\n                        <Link to=\"/refill\" style={{pointerEvents: predict ? \"none\" : \"auto\"}}\r\n                              className=\"btn money-btn green\">DEPOSIT\r\n                            <img src={deposit} alt=\"deposit\"/>\r\n                        </Link>\r\n                        <Link to=\"/withdraw\" style={{pointerEvents: predict ? \"none\" : \"auto\"}}\r\n                              className=\"btn money-btn red\">WITHDRAW\r\n                            <img src={withdraw} alt=\"withdraw\"/>\r\n                        </Link>\r\n                    </div>\r\n                    : <div>\r\n                        <button disabled={predict} onClick={() => {\r\n                            setSwitcher(true)\r\n                        }} className=\"btn money-btn green\">BET REAL BITCOIN\r\n                            {/*<img src={withdraw} alt=\"withdraw\"/>*/}\r\n                        </button>\r\n                        <Link to=\"/invite\" style={{pointerEvents: predict ? \"none\" : \"auto\"}}\r\n                              className=\"btn money-btn friends\">BETS WITH FRIENDS\r\n                            {/*<img src={deposit} alt=\"deposit\"/>*/}\r\n                        </Link>\r\n\r\n                    </div>}\r\n            </div>\r\n            <div onClick={() => {\r\n                if (wheelAvailable) {\r\n                    setChance(0);\r\n                    spingo(true);\r\n                    User.wheelSPeen()\r\n                        .then(res => {\r\n                    setChance((+res.data.data - 3) * 45 + 720);\r\n                    roulette();\r\n                    setGo(true);\r\n                    setTimeout(() => {\r\n                        setGo(false);\r\n                        spingo(false);\r\n                        setTimeout(() => win(), 500);\r\n                        userdata();\r\n                    }, 5000)\r\n                    })\r\n                }\r\n            }} className=\"banner\">\r\n                <img style={{transform: `rotate(-${chance}deg)`}} className={+go ? \"wheel go\" : \"wheel\"} src={wheel}\r\n                     alt=\"wheel\"/>\r\n                <span style={{display: go || !wheelAvailable ? \"none\" : \"inline\"}} className='span-spin'>Spin</span>\r\n                <img style={{display: go || !wheelAvailable ? \"none\" : \"inline\"}} className=\"spin\" src={spin} width={60}\r\n                     alt=\"spin\"/>\r\n                <img className=\"pointer\" src={pointer} alt=\"pointer\"/>\r\n                {wheelAvailable ? null : <span className=\"over\">SPIN IS OVER TODAY</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        balance: state.balanceReducer.balance,\r\n        lastWinGame: state.balanceReducer.lastWinGame,\r\n        lastgame: state.balanceReducer.lastgame,\r\n        colorBlalance: state.balanceReducer.colorBlalance,\r\n        wins: state.balanceReducer.wins,\r\n        name: state.balanceReducer.name,\r\n        threewins: state.balanceReducer['3wins'],\r\n        isDemo: state.balanceReducer.isDemo,\r\n        predict: state.balanceReducer.predict,\r\n        wheelAvailable: state.balanceReducer.wheelAvailable,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    click,\r\n    userdata,\r\n    changeDemo,\r\n    createAd,\r\n    roulette,\r\n    spingo,\r\n    win\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSector);\r\n","C:\\Projects\\WinBtc247\\src\\components\\riches.js",["207"],"export default [\r\n    {name: \"David\", wins: 97152, loses: 84152,  balance: \"314.78 BTC\",},\r\n    {name: \"John\", wins: 96666, loses: 83731,  balance: \"314.44 BTC\",},\r\n    {name: \"Paul\", wins: 96181, loses: 83311,  balance: \"314.30 BTC\",},\r\n    {name: \"Mark\", wins: 95695, loses: 82890,  balance: \"314.00 BTC\",},\r\n    {name: \"James\", wins: 95209, loses: 82469,  balance: \"313.84 BTC\",},\r\n    {name: \"Andrew\", wins: 94723, loses: 82048,  balance: \"313.56 BTC\",},\r\n    {name: \"Scott\", wins: 94238, loses: 81628,  balance: \"313.46 BTC\",},\r\n    {name: \"Steven\", wins: 93752, loses: 81207,  balance: \"313.22 BTC\",},\r\n    {name: \"Robert\", wins: 93266, loses: 80786,  balance: \"313.15 BTC\",},\r\n    {name: \"Stephen\", wins: 92780, loses: 80365,  balance: \"313 BTC\",},\r\n    {name: \"William\", wins: 92295, loses: 79945,  balance: \"312.97 BTC\",},\r\n    {name: \"Craig\", wins: 91809, loses: 79524,  balance: \"312.97 BTC\",},\r\n    {name: \"Michael\", wins: 91323, loses: 79103,  balance: \"312.94 BTC\",},\r\n    {name: \"Stuart\", wins: 90837, loses: 78682,  balance: \"312.89 BTC\",},\r\n    {name: \"Christopher\", wins: 90351, loses: 78261,  balance: \"312.78 BTC\",},\r\n    {name: \"Alan\", wins: 89866, loses: 77841,  balance: \"312.55 BTC\",},\r\n    {name: \"Colin\", wins: 89380, loses: 77420,  balance: \"312.53 BTC\",},\r\n    {name: \"Brian\", wins: 88894, loses: 76999,  balance: \"312.30 BTC\",},\r\n    {name: \"Kevin\", wins: 88408, loses: 76578,  balance: \"312.12 BTC\",},\r\n    {name: \"Gary\", wins: 87923, loses: 76158,  balance: \"312.11 BTC\",},\r\n    {name: \"Richard\", wins: 87437, loses: 75737,  balance: \"312.06 BTC\",},\r\n    {name: \"Derek\", wins: 86951, loses: 75316,  balance: \"312.02 BTC\",},\r\n    {name: \"Martin\", wins: 86465, loses: 74895,  balance: \"311.95 BTC\",},\r\n    {name: \"Thomas\", wins: 85980, loses: 74475,  balance: \"311.71 BTC\",},\r\n    {name: \"Neil\", wins: 85494, loses: 74054,  balance: \"311.63 BTC\",},\r\n    {name: \"Barry\", wins: 85008, loses: 73633,  balance: \"311.50 BTC\",},\r\n    {name: \"Ian\", wins: 84522, loses: 73212,  balance: \"311.44 BTC\",},\r\n    {name: \"Jason\", wins: 84037, loses: 72792,  balance: \"311.31 BTC\",},\r\n    {name: \"Iain\", wins: 83551, loses: 72371,  balance: \"311.01 BTC\",},\r\n    {name: \"Gordon\", wins: 83065, loses: 71950,  balance: \"311.00 BTC\",},\r\n    {name: \"Alexander\", wins: 82579, loses: 71529,  balance: \"310.81 BTC\",},\r\n    {name: \"Graeme\", wins: 82094, loses: 71109,  balance: \"310.75 BTC\",},\r\n    {name: \"Peter\", wins: 81608, loses: 70688,  balance: \"310.65 BTC\",},\r\n    {name: \"Darren\", wins: 81122, loses: 70267,  balance: \"310.16 BTC\",},\r\n    {name: \"Graham\", wins: 80636, loses: 69846,  balance: \"310.10 BTC\",},\r\n    {name: \"George\", wins: 80150, loses: 69425,  balance: \"310.10 BTC\",},\r\n    {name: \"Kenneth\", wins: 79665, loses: 69005,  balance: \"310.00 BTC\",},\r\n    {name: \"Allan\", wins: 79179, loses: 68584,  balance: \"310.00 BTC\",},\r\n    {name: \"Simon\", wins: 78693, loses: 68163,  balance: \"310.00 BTC\",},\r\n    {name: \"Douglas\", wins: 78207, loses: 67742,  balance: \"310.00 BTC\",},\r\n    {name: \"Keith\", wins: 77722, loses: 67322,  balance: \"310.00 BTC\",},\r\n    {name: \"Lee\", wins: 77236, loses: 66901,  balance: \"310 BTC\",},\r\n    {name: \"Anthony\", wins: 76750, loses: 66480,  balance: \"310.00 BTC\",},\r\n    {name: \"Grant\", wins: 76264, loses: 66059,  balance: \"310.00 BTC\",},\r\n    {name: \"Ross\", wins: 75779, loses: 65639,  balance: \"309.99 BTC\",},\r\n    {name: \"Jonathan\", wins: 75293, loses: 65218,  balance: \"309.81 BTC\",},\r\n    {name: \"Gavin\", wins: 74807, loses: 64797,  balance: \"309.77 BTC\",},\r\n    {name: \"Nicholas\", wins: 74321, loses: 64376,  balance: \"309.66 BTC\",},\r\n    {name: \"Joseph\", wins: 73836, loses: 63956,  balance: \"309.64 BTC\",},\r\n    {name: \"Stewart\", wins: 73350, loses: 63535,  balance: \"309.60 BTC\",},\r\n    {name: \"Daniel\", wins: 72864, loses: 63114,  balance: \"309.49 BTC\",},\r\n    {name: \"Edward\", wins: 72378, loses: 62693,  balance: \"309.32 BTC\",},\r\n    {name: \"Matthew\", wins: 71892, loses: 62272,  balance: \"309.24 BTC\",},\r\n    {name: \"Donald\", wins: 71407, loses: 61852,  balance: \"309.23 BTC\",},\r\n    {name: \"Fraser\", wins: 70921, loses: 61431,  balance: \"309.02 BTC\",},\r\n    {name: \"Garry\", wins: 70435, loses: 61010,  balance: \"308.98 BTC\",},\r\n    {name: \"Malcolm\", wins: 69949, loses: 60589,  balance: \"308.46 BTC\",},\r\n    {name: \"Charles\", wins: 69464, loses: 60169,  balance: \"308.25 BTC\",},\r\n    {name: \"Duncan\", wins: 68978, loses: 59748,  balance: \"308.00 BTC\",},\r\n    {name: \"Alistair\", wins: 68492, loses: 59327,  balance: \"308 BTC\",},\r\n    {name: \"Raymond\", wins: 68006, loses: 58906,  balance: \"307.87 BTC\",},\r\n    {name: \"Philip\", wins: 67521, loses: 58486,  balance: \"307.64 BTC\",},\r\n    {name: \"Ronald\", wins: 67035, loses: 58065,  balance: \"307.61 BTC\",},\r\n    {name: \"Ewan\", wins: 66549, loses: 57644,  balance: \"307.54 BTC\",},\r\n    {name: \"Ryan\", wins: 66063, loses: 57223,  balance: \"307.48 BTC\",},\r\n    {name: \"Francis\", wins: 65578, loses: 56803,  balance: \"307.02 BTC\",},\r\n    {name: \"Bruce\", wins: 65092, loses: 56382,  balance: \"306.86 BTC\",},\r\n    {name: \"Patrick\", wins: 64606, loses: 55961,  balance: \"306.68 BTC\",},\r\n    {name: \"Alastair\", wins: 64120, loses: 55540,  balance: \"306.58 BTC\",},\r\n    {name: \"Bryan\", wins: 63634, loses: 55119,  balance: \"306.47 BTC\",},\r\n    {name: \"Marc\", wins: 63149, loses: 54699,  balance: \"306.46 BTC\",},\r\n    {name: \"Jamie\", wins: 62663, loses: 54278,  balance: \"306.33 BTC\",},\r\n    {name: \"Hugh\", wins: 62177, loses: 53857,  balance: \"306.31 BTC\",},\r\n    {name: \"Euan\", wins: 61691, loses: 53436,  balance: \"306.21 BTC\",},\r\n    {name: \"Gerard\", wins: 61206, loses: 53016,  balance: \"306.08 BTC\",},\r\n    {name: \"Sean\", wins: 60720, loses: 52595,  balance: \"306.08 BTC\",},\r\n    {name: \"Wayne\", wins: 60234, loses: 52174,  balance: \"306.02 BTC\",},\r\n    {name: \"Adam\", wins: 59748, loses: 51753,  balance: \"306.00 BTC\",},\r\n    {name: \"Calum\", wins: 59263, loses: 51333,  balance: \"306.00 BTC\",},\r\n    {name: \"Alasdair\", wins: 58777, loses: 50912,  balance: \"306.00 BTC\",},\r\n    {name: \"Robin\", wins: 58291, loses: 50491,  balance: \"305.86 BTC\",},\r\n    {name: \"Greig\", wins: 57805, loses: 50070,  balance: \"305.81 BTC\",},\r\n    {name: \"Angus\", wins: 57320, loses: 49650,  balance: \"305.50 BTC\",},\r\n    {name: \"Russell\", wins: 56834, loses: 49229,  balance: \"305.43 BTC\",},\r\n    {name: \"Cameron\", wins: 56348, loses: 48808,  balance: \"305.39 BTC\",},\r\n    {name: \"Roderick\", wins: 55862, loses: 48387,  balance: \"305.33 BTC\",},\r\n    {name: \"Norman\", wins: 55377, loses: 47967,  balance: \"305.21 BTC\",},\r\n    {name: \"Murray\", wins: 54891, loses: 47546,  balance: \"305.13 BTC\",},\r\n    {name: \"Gareth\", wins: 54405, loses: 47125,  balance: \"305.07 BTC\",},\r\n    {name: \"Dean\", wins: 53919, loses: 46704,  balance: \"304.94 BTC\",},\r\n    {name: \"Eric\", wins: 53433, loses: 46283,  balance: \"304.61 BTC\",},\r\n    {name: \"Adrian\", wins: 52948, loses: 45863,  balance: \"304.50 BTC\",},\r\n    {name: \"Gregor\", wins: 52462, loses: 45442,  balance: \"304.47 BTC\",},\r\n    {name: \"Samuel\", wins: 51976, loses: 45021,  balance: \"304.44 BTC\",},\r\n    {name: \"Gerald\", wins: 51490, loses: 44600,  balance: \"304.35 BTC\",},\r\n    {name: \"Henry\", wins: 51005, loses: 44180,  balance: \"304.26 BTC\",},\r\n    {name: \"Justin\", wins: 50519, loses: 43759,  balance: \"304.12 BTC\",},\r\n    {name: \"Benjamin\", wins: 50033, loses: 43338,  balance: \"304.10 BTC\",},\r\n    {name: \"Shaun\", wins: 49547, loses: 42917,  balance: \"304.05 BTC\",},\r\n    {name: \"Callum\", wins: 49062, loses: 42497,  balance: \"304.03 BTC\",},\r\n]\r\n","C:\\Projects\\WinBtc247\\src\\redux\\actions\\music.js",[],"C:\\Projects\\WinBtc247\\src\\components\\fireworks.js",[],"C:\\Projects\\WinBtc247\\src\\redux\\actions\\game.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Main\\Time.js",["208"],"import React, {useEffect, useState} from 'react';\r\nimport {geoposition} from \"../../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Time = ({geo, geoposition}) => {\r\n    useEffect(() => {\r\n        geoposition()\r\n    },[]);\r\n    useEffect(() => {\r\n        const clock = setInterval(() => setTime(new Date().toLocaleTimeString()), 1000);\r\n        return () => clearInterval(clock);\r\n    }, [])\r\n    let [time, setTime] = useState(new Date().toLocaleTimeString());\r\n    return (\r\n        <div className=\"time\">\r\n            <h2 className=\"time-text\">{time.slice(0, 5)}</h2>\r\n            <div className=\"label text-center\">{geo || <span style={{fontSize: \"10px\"}}>Please, allow location access</span>}</div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        geo: state.geoReducer.geoposition,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    geoposition\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Time);\r\n","C:\\Projects\\WinBtc247\\src\\components\\Main\\Preloader.js",["209"],"import React from 'react';\r\nimport coin from '../../images/coin.svg';\r\nimport bitsybets from '../../images/BITCYBETS.svg';\r\n\r\nconst Preloader = ({show}) => {\r\n    // const [hide, setHide] = useState(0)\r\n    // const timerOpacity = setInterval(() => {\r\n    //     setHide(hide + 700 > 2800 ? 700 : hide + 700)\r\n    //     return clearInterval(timerOpacity);\r\n    //\r\n    // }, 500)\r\n    if (!show) {\r\n        return (\r\n            <div  className=\"load\">\r\n                <h2 className=\"text\">\r\n                    <span className=\"gold\">WIN</span>BTC<span className=\"gold\">24<b className=\"gold\">/</b>7</span>\r\n                </h2>\r\n                <div className=\"wrap-img-preload\">\r\n                    <img className=\"coin1\"  src={coin} alt=\"\"/>\r\n                    <img className=\"coin2\"  src={coin} alt=\"\"/>\r\n                    <img className=\"coin3\"  src={coin} alt=\"\"/>\r\n                    <img className=\"coin4\"  src={coin} alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <div/>\r\n    }\r\n};\r\n\r\nexport default Preloader;\r\n","C:\\Projects\\WinBtc247\\src\\components\\Main\\SelectList.js",["210","211","212","213"],"import React, {useEffect, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport peoples from '../../images/person.svg';\r\nimport {setRichesShow} from \"../../redux/actions\";\r\n\r\n\r\n\r\nconst SelectList = (props) => {\r\n    const [online, setOnline] = useState(7000);\r\n    const [list, setList] = useState(false);\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setOnline(Math.round(7000 + +props.online + Math.random() * 2000))\r\n        }, 2000);\r\n    }, [])\r\n\r\n    return (\r\n        <div onClick={()=>props.setRichesShow(true)} className=\"peoples\">\r\n            <img width=\"20\" src={peoples} alt=\"peoples\"/> <span>Online: {online}</span>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        online: state.balanceReducer.online,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setRichesShow\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectList);\r\n","C:\\Projects\\WinBtc247\\src\\components\\Main\\Rates.js",["214","215","216","217","218","219","220","221"],"C:\\Projects\\WinBtc247\\src\\api\\User.js",[],"C:\\Projects\\WinBtc247\\src\\components\\Main\\Rect\\Rect.js",[],"C:\\Projects\\WinBtc247\\src\\redux\\types.js",[],"C:\\Projects\\WinBtc247\\src\\redux\\reducers\\entry.js",["222"],"import {\r\n    AUTHORIZATION, CREATE_AD, DEVICE_WIDTH,\r\n    GET_COURSE,\r\n    GET_LOCATION, GOAWAY, LOGOUT,\r\n    PROHIBITION,\r\n    REGISTRATION, SET_SHOW_RICHES, VIEW_MODE\r\n} from \"../types\";\r\nimport {act} from \"@testing-library/react\";\r\n\r\nconst initialState = {\r\n    auth: false,\r\n    reg: false,\r\n    geoposition: '',\r\n    course: [],\r\n    currentCourse: 0,\r\n    currentTime: 0,\r\n    lastSeconds: undefined,\r\n    logoutQuestion: false,\r\n    createAd: false,\r\n    unauthorized: false,\r\n    widthMode: window.outerWidth > 756 ? \"desktop\" : \"mobile\",\r\n    view: false,\r\n    showRiches: false\r\n}\r\n\r\nexport const switchOptions = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_AD:\r\n            return {...state, createAd: !state.createAd};\r\n        case DEVICE_WIDTH:\r\n            return {...state, widthMode: action.payload};\r\n        case VIEW_MODE:\r\n            return {...state, view: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AUTHORIZATION:\r\n            if (sessionStorage.getItem('token') !== null) {\r\n                return {...state, auth: true, unauthorized: false};\r\n            } else {\r\n                return {...state, auth: false};\r\n            }\r\n        case GOAWAY:\r\n            return {\r\n                ...state,\r\n                unauthorized: true\r\n            };\r\n        case PROHIBITION:\r\n            return {...state, auth: false};\r\n        case REGISTRATION:\r\n            return {...state, reg: !state.reg}\r\n        case LOGOUT:\r\n            return {...state, logoutQuestion: !state.logoutQuestion}\r\n        case SET_SHOW_RICHES:\r\n            return {...state, showRiches: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const geoReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case GET_LOCATION:\r\n            return {...state, geoposition: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const courseReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_COURSE:\r\n            return {\r\n                ...state,\r\n                course: action.payload.bitcoins,\r\n                currentCourse: action.payload.bitcoins ? action.payload.bitcoins[action.payload.bitcoins.length - 1] : 0,\r\n                currentTime: action.payload.times ? action.payload.times[action.payload.times.length - 1] : 0,\r\n                lastSeconds: action.payload.lastSeconds\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","C:\\Projects\\WinBtc247\\src\\redux\\reducers\\game.js",["223"],"import {\r\n    BET_LOSE,\r\n    BET_WIN, CHANGE_DEMO,\r\n    CLEAR_BET,\r\n    CLOSE_CONGRATULATION, CLOSE_YOURLOSE,\r\n    GET_RATES,\r\n    GET_USER_DATA, GOAWAY,\r\n    SET_BET_DOWN,\r\n    SET_BET_UP\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    balance: 0,\r\n    lastWin: 0,\r\n    lastWinGame: 0,\r\n    lastgame: 0,\r\n    wins: 0,\r\n    '3wins': false,\r\n    btcWallet: '',\r\n    isDemo: undefined,\r\n    congratulation: false,\r\n    predict: '',\r\n    colorBlalance: 'white',\r\n    down: 0,\r\n    up: 0,\r\n    upBets: 0,\r\n    downBets: 0,\r\n    online: 0,\r\n    yourlose: false,\r\n    wheelAvailable: false\r\n<<<<<<< HEAD\r\n=======\r\n\r\n>>>>>>> 63910346a1e556d5ada8a198368f2f367a6500ff\r\n}\r\nexport const balanceReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case CHANGE_DEMO:\r\n            return {\r\n                ...state,\r\n                isDemo: !state.isDemo\r\n            };\r\n        case GET_USER_DATA:\r\n            if (action.payload.isDemo) {\r\n                return {\r\n                    ...state,\r\n                    '3wins': action.payload['3wins'],\r\n                    balance: action.payload.demoBalance,\r\n                    btcWallet: action.payload.btcWallet,\r\n                    wins: action.payload.wins,\r\n                    lastWin: action.payload.lastWin,\r\n                    lastWinGame: action.payload.lastWinGame,\r\n                    lastgame: action.payload.lastgame,\r\n                    name: action.payload.name,\r\n                    online: action.payload.online,\r\n                    isDemo: action.payload.isDemo,\r\n<<<<<<< HEAD\r\n                    wheelAvailable: action.payload.wheelAvailable\r\n=======\r\n                    wheelAvailable: action.wheelAvailable\r\n>>>>>>> 63910346a1e556d5ada8a198368f2f367a6500ff\r\n                };\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    '3wins': action.payload['3wins'],\r\n                    balance: action.payload.balance,\r\n                    btcWallet: action.payload.btcWallet,\r\n                    wins: action.payload.wins,\r\n                    lastWin: action.payload.lastWin,\r\n                    lastWinGame: action.payload.lastWinGame,\r\n                    lastgame: action.payload.lastgame,\r\n                    name: action.payload.name,\r\n                    online: action.payload.online,\r\n                    isDemo: action.payload.isDemo,\r\n<<<<<<< HEAD\r\n                    wheelAvailable: action.payload.wheelAvailable\r\n=======\r\n                    wheelAvailable: action.wheelAvailable\r\n>>>>>>> 63910346a1e556d5ada8a198368f2f367a6500ff\r\n                };\r\n            }\r\n        case GET_RATES:\r\n            if (state.isDemo) {\r\n                return {\r\n                    ...state,\r\n                    down: action.payload.demo.down.peoples,\r\n                    up: action.payload.demo.up.peoples,\r\n                    upBets: action.payload.demo.up.bitcoins,\r\n                    downBets: action.payload.demo.down.bitcoins,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    down: action.payload.real.down.peoples,\r\n                    up: action.payload.real.up.peoples,\r\n                    upBets: action.payload.real.up.bitcoins,\r\n                    downBets: action.payload.real.down.bitcoins,\r\n                }\r\n            }\r\n        case BET_WIN:\r\n            return {\r\n                ...state,\r\n                congratulation: true,\r\n                colorBlalance: 'green'\r\n            };\r\n        case BET_LOSE:\r\n            return {\r\n                ...state,\r\n                colorBlalance: 'red',\r\n                yourlose: true\r\n            };\r\n        case SET_BET_UP:\r\n            return {\r\n                ...state,\r\n                predict: 'up'\r\n            };\r\n        case SET_BET_DOWN:\r\n            return {\r\n                ...state,\r\n                predict: 'down'\r\n            };\r\n        case CLEAR_BET:\r\n            return {\r\n                ...state,\r\n                predict: ''\r\n            };\r\n        case CLOSE_CONGRATULATION:\r\n            return {...state, congratulation: false};\r\n        case CLOSE_YOURLOSE:\r\n            return {...state, yourlose: false};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","C:\\Projects\\WinBtc247\\src\\redux\\reducers\\sound.js",[],"C:\\Projects\\WinBtc247\\src\\api\\Api.js",[],{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":1,"column":16,"nodeType":"230","messageId":"231","endLine":1,"endColumn":24},{"ruleId":"232","severity":1,"message":"233","line":54,"column":8,"nodeType":"234","endLine":54,"endColumn":24,"suggestions":"235"},{"ruleId":"232","severity":1,"message":"236","line":58,"column":39,"nodeType":"234","endLine":58,"endColumn":41,"suggestions":"237"},{"ruleId":"228","severity":1,"message":"238","line":1,"column":26,"nodeType":"230","messageId":"231","endLine":1,"endColumn":35},{"ruleId":"228","severity":1,"message":"239","line":18,"column":12,"nodeType":"230","messageId":"231","endLine":18,"endColumn":16},{"ruleId":"228","severity":1,"message":"240","line":19,"column":12,"nodeType":"230","messageId":"231","endLine":19,"endColumn":21},{"ruleId":"232","severity":1,"message":"241","line":40,"column":8,"nodeType":"234","endLine":40,"endColumn":10,"suggestions":"242"},{"ruleId":"232","severity":1,"message":"243","line":50,"column":8,"nodeType":"234","endLine":50,"endColumn":27,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":74,"column":25,"nodeType":"247","endLine":78,"endColumn":53},{"ruleId":"228","severity":1,"message":"248","line":15,"column":8,"nodeType":"230","messageId":"231","endLine":15,"endColumn":17},{"ruleId":"228","severity":1,"message":"249","line":16,"column":8,"nodeType":"230","messageId":"231","endLine":16,"endColumn":17},{"ruleId":"232","severity":1,"message":"250","line":51,"column":8,"nodeType":"234","endLine":51,"endColumn":23,"suggestions":"251"},{"ruleId":"232","severity":1,"message":"252","line":10,"column":11,"nodeType":"253","endLine":12,"endColumn":6},{"ruleId":"232","severity":1,"message":"254","line":19,"column":8,"nodeType":"234","endLine":19,"endColumn":36,"suggestions":"255"},{"ruleId":"228","severity":1,"message":"256","line":96,"column":34,"nodeType":"230","messageId":"231","endLine":96,"endColumn":40},{"ruleId":"228","severity":1,"message":"257","line":96,"column":42,"nodeType":"230","messageId":"231","endLine":96,"endColumn":50},{"ruleId":"228","severity":1,"message":"258","line":96,"column":52,"nodeType":"230","messageId":"231","endLine":96,"endColumn":54},{"ruleId":"228","severity":1,"message":"259","line":96,"column":56,"nodeType":"230","messageId":"231","endLine":96,"endColumn":60},{"ruleId":"232","severity":1,"message":"260","line":53,"column":8,"nodeType":"234","endLine":53,"endColumn":16,"suggestions":"261"},{"ruleId":"232","severity":1,"message":"233","line":56,"column":8,"nodeType":"234","endLine":56,"endColumn":10,"suggestions":"262"},{"ruleId":"228","severity":1,"message":"263","line":58,"column":11,"nodeType":"230","messageId":"231","endLine":58,"endColumn":21},{"ruleId":"264","severity":1,"message":"265","line":1,"column":1,"nodeType":"266","endLine":102,"endColumn":2},{"ruleId":"232","severity":1,"message":"267","line":8,"column":7,"nodeType":"234","endLine":8,"endColumn":9,"suggestions":"268"},{"ruleId":"228","severity":1,"message":"249","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":17},{"ruleId":"228","severity":1,"message":"269","line":10,"column":12,"nodeType":"230","messageId":"231","endLine":10,"endColumn":16},{"ruleId":"228","severity":1,"message":"270","line":10,"column":18,"nodeType":"230","messageId":"231","endLine":10,"endColumn":25},{"ruleId":"228","severity":1,"message":"271","line":12,"column":15,"nodeType":"230","messageId":"231","endLine":12,"endColumn":23},{"ruleId":"232","severity":1,"message":"272","line":15,"column":8,"nodeType":"234","endLine":15,"endColumn":10,"suggestions":"273"},{"ruleId":"228","severity":1,"message":"274","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":14},{"ruleId":"228","severity":1,"message":"275","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":15},{"ruleId":"228","severity":1,"message":"276","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":11},{"ruleId":"228","severity":1,"message":"277","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":12},{"ruleId":"228","severity":1,"message":"278","line":6,"column":9,"nodeType":"230","messageId":"231","endLine":6,"endColumn":14},{"ruleId":"228","severity":1,"message":"279","line":20,"column":11,"nodeType":"230","messageId":"231","endLine":20,"endColumn":20},{"ruleId":"280","severity":1,"message":"281","line":45,"column":28,"nodeType":"282","messageId":"283","endLine":45,"endColumn":30},{"ruleId":"280","severity":1,"message":"281","line":60,"column":29,"nodeType":"282","messageId":"283","endLine":60,"endColumn":31},{"ruleId":"228","severity":1,"message":"284","line":8,"column":9,"nodeType":"230","messageId":"231","endLine":8,"endColumn":12},{"ruleId":"228","severity":1,"message":"285","line":7,"column":20,"nodeType":"230","messageId":"231","endLine":7,"endColumn":26},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userdata'. Either include it or remove the dependency array. If 'userdata' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["288"],"React Hook useEffect has a missing dependency: 'switchView'. Either include it or remove the dependency array. If 'switchView' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["289"],"'useEffect' is defined but never used.","'code' is assigned a value but never used.","'enterCode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'authorization'. Either include it or remove the dependency array. If 'authorization' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["290"],"React Hook useEffect has a missing dependency: 'prohibition'. Either include it or remove the dependency array. If 'prohibition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["291"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Preloader' is defined but never used.","'bitsybets' is defined but never used.","React Hook useEffect has missing dependencies: 'bet', 'course', and 'lastSeconds'. Either include them or remove the dependency array.",["292"],"The 'muted' function makes the dependencies of useEffect Hook (at line 22) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'muted' in its own useCallback() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'stop'. Either include it or remove the dependency array. If 'stop' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["293"],"'upBets' is assigned a value but never used.","'downBets' is assigned a value but never used.","'up' is assigned a value but never used.","'down' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'chance'. Either include it or remove the dependency array.",["294"],["295"],"'spinHander' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'geoposition'. Either include it or remove the dependency array. If 'geoposition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["296"],"'list' is assigned a value but never used.","'setList' is assigned a value but never used.","'interval' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.online'. Either include it or remove the dependency array. If 'setOnline' needs the current value of 'props.online', you can also switch to useReducer instead of useState and read 'props.online' in the reducer.",["297"],"'person' is defined but never used.","'bitcoin' is defined but never used.","'car' is defined but never used.","'jack' is defined but never used.","'rates' is defined but never used.","'smileTest' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'act' is defined but never used.","'GOAWAY' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},"Update the dependencies array to be: [congratulation, userdata]",{"range":"318","text":"319"},"Update the dependencies array to be: [switchView]",{"range":"320","text":"321"},"Update the dependencies array to be: [authorization]",{"range":"322","text":"323"},"Update the dependencies array to be: [location.pathname, prohibition]",{"range":"324","text":"325"},"Update the dependencies array to be: [bet, course, currentCourse, lastSeconds]",{"range":"326","text":"327"},"Update the dependencies array to be: [param.id, play, handlePlay, stop]",{"range":"328","text":"329"},"Update the dependencies array to be: [banner, chance]",{"range":"330","text":"331"},"Update the dependencies array to be: [userdata]",{"range":"332","text":"333"},"Update the dependencies array to be: [geoposition]",{"range":"334","text":"335"},"Update the dependencies array to be: [props.online]",{"range":"336","text":"337"},[1817,1833],"[congratulation, userdata]",[1926,1928],"[switchView]",[1519,1521],"[authorization]",[1815,1834],"[location.pathname, prohibition]",[1990,2005],"[bet, course, currentCourse, lastSeconds]",[588,616],"[param.id, play, handlePlay, stop]",[2192,2200],"[banner, chance]",[2254,2256],"[userdata]",[233,235],"[geoposition]",[498,500],"[props.online]"]